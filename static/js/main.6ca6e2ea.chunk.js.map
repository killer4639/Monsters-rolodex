{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchBar/searchBar.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBar","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAAe,I,iCCEFA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,iCACEC,IAAI,WACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,2BAFL,MAGM,KAEN,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCRXC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCLdM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmDDG,E,kDArDb,aAAe,IAAD,8BACZ,gBAWFH,aAAe,SAACI,GAAD,OAAO,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAV1D,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,oBAG/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAC1B,GACxC,OAAOA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEzD,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA1BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6ca6e2ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport \"./card.styles.css\";\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img\r\n        alt=\"monsters\"\r\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        alt=\"\"\r\n      />\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component\";\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./searchBar.styles.css\";\r\nexport const SearchBar = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState, Component, useEffect } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBar } from \"./components/searchBar/searchBar.component\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n  handleChange = (e) => this.setState({ searchField: e.target.value });\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBar\n          placeholder=\"search monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\n// const App = () => {\n//   const [monsters, setMonsters] = useState([]);\n//   const [searchField, setSearchField] = useState(\"\");\n//   useEffect(() => {\n//     fetch(\"https://jsonplaceholder.typicode.com/users\")\n//       .then((response) => response.json())\n//       .then((users) => setMonsters(users));\n//   }, []);\n\n//   const filteredMonsters = monsters.filter((monster) => {\n//     return monster.name.toLowerCase().includes(searchField.toLowerCase());\n//   });\n//   function handleChange(e) {\n//     setSearchField(e.target.value);\n//   }\n//   return (\n//     <div className=\"App\">\n//       <SearchBar placeholder=\"search monsters\" handleChange={handleChange} />\n//       <CardList monsters={filteredMonsters} />\n//     </div>\n//   );\n// };\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}